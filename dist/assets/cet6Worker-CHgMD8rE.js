(function(){"use strict";self.onmessage=async n=>{const{url:e}=n.data;try{const t=await fetch(e,{cache:"no-cache"});if(!t.ok)throw new Error("HTTP "+t.status);const s=await t.text(),o=f(s);self.postMessage({ok:!0,words:o})}catch(t){self.postMessage({ok:!1,error:(t==null?void 0:t.message)||String(t)})}};function f(n){const e=n.split(/\r?\n/),t=[];let s=null;for(let o=0;o<e.length;o++){const i=e[o].trim();if(!i)continue;const r=i.match(/^([a-zA-Z][a-zA-Z\-]*)\s+\[([^\]]+)\]\s+(.+)$/);if(r){c(t,{word:r[1].toLowerCase(),phonetic:r[2].trim(),translation:l(r[3])}),s=null;continue}if(/^[a-zA-Z][a-zA-Z\-]*$/.test(i)){s=i.toLowerCase();continue}if(s&&/^\[[^\]]+\]/.test(i)){const a=i.match(/^\[([^\]]+)\]\s*(.*)$/);if(a){c(t,{word:s,phonetic:a[1].trim(),translation:l(a[2])||"(释义缺失)"}),s=null;continue}}}return t.filter(o=>o.translation.length>1)}function c(n,e){n.find(t=>t.word===e.word)||n.push(e)}function l(n){return n.replace(/\s+/g," ").replace(/\|\|.*$/,"").trim()}})();
